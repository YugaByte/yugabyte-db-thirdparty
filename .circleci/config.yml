version: 2.1

jobs:
  build:
    parameters:
      docker_image:
        type: string
      single_compiler_type:
        type: string
      compiler_suffix:
        type: string
      devtoolset:
        type: string
      docker_image_default_ubuntu:
        type: string
        default: yugabyteci/yb_build_infra_ubuntu1804:v2020-10-13T22_08_51
      docker_image_default_centos:
        type: string
        deafult: yugabyteci/yb_build_infra_centos7:v2020-10-17T18_09_58

    # Need docker run with SYS_PTRACE for address sanitizer to work
    machine:
      enabled: true

    steps:
      - checkout

      - run:
          name: Build YugabyteDB third-party dependencies
          command: |
            df -H .
            checkout_dir=$PWD
            echo "Building in directory: $checkout_dir"
            echo "YB_BUILD_THIRDPARTY_EXTRA_ARGS=${YB_BUILD_THIRDPARTY_EXTRA_ARGS:-undefined}"
            docker run -t \
              --cap-add=SYS_PTRACE \
              -e GITHUB_TOKEN \
              -e YB_BUILD_THIRDPARTY_EXTRA_ARGS \
              -e CIRCLE_PULL_REQUEST \
              "--mount=type=bind,src=$checkout_dir,dst=/opt/yb-build/thirdparty/checkout" \
              << parameters.docker_image >> \
              bash -c "
                cd /opt/yb-build/thirdparty/checkout
                export YB_THIRDPARTY_BUILD_NAME=<< parameters.name >>
                export YB_THIRDPARTY_SINGLE_COMPILER_TYPE=<< parameters.single_compiler_type >>
                export YB_THIRDPARTY_COMPILER_SUFFIX=<< parameters.compiler_suffix >>
                export YB_THIRDPARTY_DEVTOOLSET=< parameters.devtoolset >>
                ./build_and_release.sh
              "

workflows:
  build-release:
    jobs:
      - build:
          name: build-centos-linuxbrew
          docker_image: << parameters.docker_image_default_centos >>
      - build:
          name: build-centos-devtoolset-8
          docker_image: << parameters.docker_image_default_centos >>
          devtoolset
      - build:
          name: build-ubuntu
          docker_image: << parameters.docker_image_default_ubuntu >>
      - build:
          name: build-ubuntu-clang10
          docker_image: << parameters.docker_image_default_ubuntu >>
          single_compiler_type: clang
          compiler_suffix: "-10"
